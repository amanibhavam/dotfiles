#!/usr/bin/env bash

function main {
    # start logging
    exec 2>>/tmp/meh.log

    # unpack state for this VM
    (cd /; echo "${DEFN_DEV_ARCHIVE}" | base64 -d | tar xvf -)

    # add swap
    dd if=/dev/zero of=/root/swap0 bs=1M count=200
    chmod 0600 /root/swap0
    mkswap /root/swap0
    swapon /root/swap0

    # start tailscaled
    (setsid /usr/sbin/tailscaled --statedir=/var/lib/tailscale) &

    # register tailscale node
    (sleep 5; tailscale up --ssh --hostname "$(echo "${DEFN_DEV_HOST}" | cut -d. -f1)") &

    # wait for a tailscale IP
    while ! tailscale ip -4; do sleep 1; done

    # start dockerd
    (setsid dockerd -H unix:///var/run/docker.sock -H tcp://127.0.0.1 --mtu="$(ifconfig eth0 | grep mtu | awk '{print $NF}')") &

    # wait for docker to come up
    export DOCKER_HOST=unix:///var/run/docker.sock
    while ! docker ps; do sleep 1; done

    # skip kuma setup
    #(setsid bash -c "while true; do sudo -u ubuntu -H ~ubuntu/bin/e kuma-cp-on; sleep 5; done") &
    #(setsid bash -c "while true; do sudo -u ubuntu -H ~ubuntu/bin/e kuma-ingress-on; sleep 5; done") &
    #(setsid bash -c "while true; do sudo -u ubuntu -H ~ubuntu/bin/e kuma-dp-on; sleep 5; done") &

    # start code-server
    (setsid bash -c "while true; do sudo -u ubuntu -H --preserve-env=PASSWORD ~ubuntu/bin/e code-server --bind-addr 0.0.0.0:8888 --disable-telemetry; sleep 5; done") &

    # start caddy
    (setsid bash -c "while true; do ~ubuntu/.nix-profile/bin/caddy; sleep 5; done") &

    # keep the VM alive
    sleep infinity
}

main "$@"

#exec /usr/sbin/sshd -D -o UseDNS=no -o UsePAM=yes -o PasswordAuthentication=no -o StreamLocalBindUnlink=yes
