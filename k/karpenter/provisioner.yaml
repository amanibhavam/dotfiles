apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot"]
    - key: "node.kubernetes.io/instance-type"
      operator: In
      values: ["t3.medium", "t3a.medium"]
  limits:
    resources:
      cpu: 10
  providerRef:                                # optional, recommended to use instead of `provider`
    name: default
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  amiFamily: Custom
  amiSelector:
    karpenter.sh/discovery: k3d-control
  instanceProfile: k3d-control
  subnetSelector:
    karpenter.sh/discovery: k3d-control
  securityGroupSelector:
    karpenter.sh/discovery: k3d-control
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"
    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"
    #!/bin/bash

    set -exfu
    mkdir ~/tmp
    cd ~/tmp

    k3stoken="$(sudo cat ~root/.k3s-token)"
    tskey="$(sudo cat ~root/.tskey)"
    rm -f ~root/.k3s-token ~root/.tskey

    echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDqGiNI0Co9JAKytfce4UVhEJj+HMaoZ7TFiLg8SBeRDxV+OLma9rqDVkVqrxW5rkGMco3/Xhm/uGu+rkODJD/aZD/1fpzEsNUQIKhP9VXlVx98CMYOMCXTrgXZGdNPs0CzIb0TDI3W1tOGAA0VOZL+DGb/pUFiWeADLA9GiA8qnhahQp6yCNf8zpt3ATawSOGDLttB+PQPvwwUGMozihCcn84Kbf2Q0aQEl5J0kPLQTgBTJ1pPjTqBmkBWhP1KKAEDz3ziUmFF2eoZax7B+VXYlI6nPeETqFWkke6/EVLRqOXC4nYXKUbX2HloiEGkv4ifzzuGyS2Tdiysx0dthVcv cardno:8 624 146 > authorized_keys
    install -m 0600 -o ubuntu -g ubuntu authorized_keys ~ubuntu/.ssh/authorized_keys
    rm -f authorized_keys

    TOKEN="$(curl -sSL -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")"
    instance="$(curl -sSL -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/instance-id)"

    echo FROM quay.io/defn/dev:k3d > Dockerfile
    echo ENV DEFN_DEV_TSKEY=${tskey} >> Dockerfile
    docker build -t k3d-control .
    rm -f Dockerfile

    k3d node create "$instance" --role agent --image k3d-control --cluster https://100.106.117.83:6443 --token "${k3stoken}"

    --BOUNDARY
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inflate
  namespace: karpenter
spec:
  replicas: 20
  selector:
    matchLabels:
      app: inflate
  template:
    metadata:
      labels:
        app: inflate
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: inflate
          image: ubuntu
          command: ["sleep", "infinity"]
          resources:
            requests:
              cpu: 100m
